name: Test

on:
  push:
    branches: '*'

jobs:
  vendor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: get dependencies
        run: go get -v -t -d ./...
      - name: vendoring
        run: go mod vendor

      - uses: actions/upload-artifact@v2
        with:
          name: repository
          path: .

  lint:
    runs-on: ubuntu-latest
    needs: vendor
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.32

  test:
    runs-on: ubuntu-latest
    needs: vendor
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - uses: actions/download-artifact@v2
        with:
          name: repository
          path: .
      - name: test race
        run: go test -v -race ./...

  release-test:
    runs-on: ubuntu-latest
    needs: vendor
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - uses: actions/download-artifact@v2
        with:
          name: repository
          path: .
      - name: release (dry-run)
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist --skip-publish --snapshot

  cover:
    runs-on: ubuntu-latest
    needs: vendor
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - uses: actions/download-artifact@v2
        with:
          name: repository
          path: .
      - name: take coverage
        run: go test -coverprofile=coverage.txt -covermode=count ./...
      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.txt
